/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
下面是线程函数
76B2AEAF    8BFF            MOV EDI,EDI
76B2AEB1    55              PUSH EBP
76B2AEB2    8BEC            MOV EBP,ESP
76B2AEB4    81EC 8C000000   SUB ESP,8C
76B2AEBA    56              PUSH ESI
76B2AEBB    33F6            XOR ESI,ESI
76B2AEBD    46              INC ESI
76B2AEBE    8935 0400B376   MOV DWORD PTR DS:[76B30004],ESI
76B2AEC4    8D85 74FFFFFF   LEA EAX,DWORD PTR SS:[EBP-8C]
76B2AECA    50              PUSH EAX
76B2AECB    8D45 B8         LEA EAX,DWORD PTR SS:[EBP-48]
76B2AECE    50              PUSH EAX
76B2AECF    8D45 FC         LEA EAX,DWORD PTR SS:[EBP-4]
76B2AED2    50              PUSH EAX
76B2AED3    E8 57FCFFFF     CALL winmm.76B2AB2F
76B2AED8    6A 00           PUSH 0
76B2AEDA    56              PUSH ESI
76B2AEDB    56              PUSH ESI
76B2AEDC    8D45 B8         LEA EAX,DWORD PTR SS:[EBP-48]
76B2AEDF    50              PUSH EAX
76B2AEE0    FF75 FC         PUSH DWORD PTR SS:[EBP-4]
76B2AEE3    FF15 2012B176   CALL DWORD PTR DS:[<&ntdll.NtWaitForMult>; ntdll.ZwWaitForMultipleObjects
76B2AEE9    85C0            TEST EAX,EAX
76B2AEEB  ^ 74 D7           JE SHORT winmm.76B2AEC4
76B2AEED    3BC6            CMP EAX,ESI
76B2AEEF  ^ 7C E7           JL SHORT winmm.76B2AED8
76B2AEF1    83F8 10         CMP EAX,10
76B2AEF4  ^ 7F E2           JG SHORT winmm.76B2AED8
76B2AEF6    FFB485 74FFFFFF PUSH DWORD PTR SS:[EBP+EAX*4-8C]
76B2AEFD    E8 08FEFFFF     CALL winmm.76B2AD0A				// 线程中的关键主要函数
76B2AF02  ^ EB D4           JMP SHORT winmm.76B2AED8



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 线程中的关键主要函数(声音和视频都在这个函数中)
76B2AD0A    8BFF            MOV EDI,EDI
76B2AD0C    55              PUSH EBP
76B2AD0D    8BEC            MOV EBP,ESP
76B2AD0F    83EC 0C         SUB ESP,0C
76B2AD12    53              PUSH EBX
76B2AD13    56              PUSH ESI
76B2AD14    BB 0002B376     MOV EBX,winmm.76B30200
76B2AD19    53              PUSH EBX
76B2AD1A    FF15 4C11B176   CALL DWORD PTR DS:[<&KERNEL32.EnterCriti>; ntdll.RtlEnterCriticalSection
76B2AD20    8B4D 08         MOV ECX,DWORD PTR SS:[EBP+8]
76B2AD23    8BC1            MOV EAX,ECX
76B2AD25    83E0 0F         AND EAX,0F
76B2AD28    8D3440          LEA ESI,DWORD PTR DS:[EAX+EAX*2]
76B2AD2B    C1E6 04         SHL ESI,4
76B2AD2E    81C6 6017B376   ADD ESI,winmm.76B31760
76B2AD34    394E 10         CMP DWORD PTR DS:[ESI+10],ECX
76B2AD37    74 0C           JE SHORT winmm.76B2AD45
76B2AD39    53              PUSH EBX
76B2AD3A    FF15 A811B176   CALL DWORD PTR DS:[<&KERNEL32.LeaveCriti>; ntdll.RtlLeaveCriticalSection
76B2AD40    E9 1B010000     JMP winmm.76B2AE60
76B2AD45    57              PUSH EDI
76B2AD46    33FF            XOR EDI,EDI
76B2AD48    397E 28         CMP DWORD PTR DS:[ESI+28],EDI
76B2AD4B    74 3D           JE SHORT winmm.76B2AD8A
76B2AD4D    E8 B77DFEFF     CALL winmm.76B12B09
76B2AD52    8B4E 20         MOV ECX,DWORD PTR DS:[ESI+20]
76B2AD55    8B7E 24         MOV EDI,DWORD PTR DS:[ESI+24]
76B2AD58    2BC8            SUB ECX,EAX
76B2AD5A    1BFA            SBB EDI,EDX
76B2AD5C    897D F8         MOV DWORD PTR SS:[EBP-8],EDI
76B2AD5F    78 27           JS SHORT winmm.76B2AD88
76B2AD61    7F 04           JG SHORT winmm.76B2AD67
76B2AD63    85C9            TEST ECX,ECX
76B2AD65    76 21           JBE SHORT winmm.76B2AD88
76B2AD67    6A 01           PUSH 1
76B2AD69    FF15 5811B176   CALL DWORD PTR DS:[<&KERNEL32.Sleep>]    ; kernel32.Sleep
76B2AD6F    E8 957DFEFF     CALL winmm.76B12B09
76B2AD74    8B7E 20         MOV EDI,DWORD PTR DS:[ESI+20]
76B2AD77    8B4E 24         MOV ECX,DWORD PTR DS:[ESI+24]
76B2AD7A    2BF8            SUB EDI,EAX
76B2AD7C    1BCA            SBB ECX,EDX
76B2AD7E    85C9            TEST ECX,ECX
76B2AD80  ^ 7F E5           JG SHORT winmm.76B2AD67
76B2AD82    7C 04           JL SHORT winmm.76B2AD88
76B2AD84    85FF            TEST EDI,EDI
76B2AD86  ^ 77 DF           JA SHORT winmm.76B2AD67
76B2AD88    33FF            XOR EDI,EDI
76B2AD8A    8B46 14         MOV EAX,DWORD PTR DS:[ESI+14]
76B2AD8D    25 F0000000     AND EAX,0F0
76B2AD92    74 1A           JE SHORT winmm.76B2ADAE
76B2AD94    83F8 10         CMP EAX,10
76B2AD97    74 10           JE SHORT winmm.76B2ADA9
76B2AD99    83F8 20         CMP EAX,20
76B2AD9C    75 79           JNZ SHORT winmm.76B2AE17
76B2AD9E    FF76 08         PUSH DWORD PTR DS:[ESI+8]
76B2ADA1    FF15 B410B176   CALL DWORD PTR DS:[<&KERNEL32.PulseEvent>; kernel32.PulseEvent
76B2ADA7    EB 6E           JMP SHORT winmm.76B2AE17
76B2ADA9    FF76 08         PUSH DWORD PTR DS:[ESI+8]
76B2ADAC    EB 63           JMP SHORT winmm.76B2AE11
76B2ADAE    8B46 10         MOV EAX,DWORD PTR DS:[ESI+10]
76B2ADB1    FF35 1000B376   PUSH DWORD PTR DS:[76B30010]
76B2ADB7    C705 0C00B376 0>MOV DWORD PTR DS:[76B3000C],1
76B2ADC1    A3 0800B376     MOV DWORD PTR DS:[76B30008],EAX
76B2ADC6    FF15 F811B176   CALL DWORD PTR DS:[<&KERNEL32.ResetEvent>; kernel32.ResetEvent
76B2ADCC    8B46 0C         MOV EAX,DWORD PTR DS:[ESI+C]
76B2ADCF    8945 FC         MOV DWORD PTR SS:[EBP-4],EAX
76B2ADD2    8B46 08         MOV EAX,DWORD PTR DS:[ESI+8]
76B2ADD5    53              PUSH EBX
76B2ADD6    8945 F8         MOV DWORD PTR SS:[EBP-8],EAX
76B2ADD9    FF15 A811B176   CALL DWORD PTR DS:[<&KERNEL32.LeaveCriti>; ntdll.RtlLeaveCriticalSection
76B2ADDF    397E 28         CMP DWORD PTR DS:[ESI+28],EDI
76B2ADE2    57              PUSH EDI
76B2ADE3    57              PUSH EDI
76B2ADE4    FF75 FC         PUSH DWORD PTR SS:[EBP-4]
76B2ADE7    57              PUSH EDI
76B2ADE8    FF75 08         PUSH DWORD PTR SS:[EBP+8]
76B2ADEB    6A 03           PUSH 3
76B2ADED    FF75 F8         PUSH DWORD PTR SS:[EBP-8]
76B2ADF0    74 07           JE SHORT winmm.76B2ADF9
76B2ADF2    E8 E15EFFFF     CALL winmm.WOW32DriverCallback
76B2ADF7    EB 05           JMP SHORT winmm.76B2ADFE
76B2ADF9    E8 9BA6FEFF     CALL winmm.DriverCallback				// 视频输出函数
76B2ADFE    53              PUSH EBX
76B2ADFF    FF15 4C11B176   CALL DWORD PTR DS:[<&KERNEL32.EnterCriti>; ntdll.RtlEnterCriticalSection
76B2AE05    FF35 1000B376   PUSH DWORD PTR DS:[76B30010]
76B2AE0B    893D 0C00B376   MOV DWORD PTR DS:[76B3000C],EDI
76B2AE11    FF15 0C11B176   CALL DWORD PTR DS:[<&KERNEL32.SetEvent>] ; kernel32.SetEvent
76B2AE17    8B45 08         MOV EAX,DWORD PTR SS:[EBP+8]
76B2AE1A    3B46 10         CMP EAX,DWORD PTR DS:[ESI+10]
76B2AE1D    75 39           JNZ SHORT winmm.76B2AE58
76B2AE1F    F646 14 01      TEST BYTE PTR DS:[ESI+14],1
76B2AE23    75 1B           JNZ SHORT winmm.76B2AE40
76B2AE25    8B46 04         MOV EAX,DWORD PTR DS:[ESI+4]
76B2AE28    50              PUSH EAX
76B2AE29    897E 10         MOV DWORD PTR DS:[ESI+10],EDI
76B2AE2C    E8 74FFFEFF     CALL winmm.timeEndPeriod
76B2AE31    57              PUSH EDI
76B2AE32    FF35 0000B376   PUSH DWORD PTR DS:[76B30000]
76B2AE38    FF15 3012B176   CALL DWORD PTR DS:[<&ntdll.NtSetEvent>]  ; ntdll.ZwSetEvent
76B2AE3E    EB 18           JMP SHORT winmm.76B2AE58
76B2AE40    56              PUSH ESI
76B2AE41    E8 5CFDFFFF     CALL winmm.76B2ABA2
76B2AE46    85C0            TEST EAX,EAX
76B2AE48    75 0E           JNZ SHORT winmm.76B2AE58
76B2AE4A    8B46 04         MOV EAX,DWORD PTR DS:[ESI+4]
76B2AE4D    897E 10         MOV DWORD PTR DS:[ESI+10],EDI
76B2AE50    FF76 04         PUSH DWORD PTR DS:[ESI+4]
76B2AE53    E8 4DFFFEFF     CALL winmm.timeEndPeriod
76B2AE58    53              PUSH EBX
76B2AE59    FF15 A811B176   CALL DWORD PTR DS:[<&KERNEL32.LeaveCriti>; ntdll.RtlLeaveCriticalSection
76B2AE5F    5F              POP EDI
76B2AE60    5E              POP ESI
76B2AE61    5B              POP EBX
76B2AE62    C9              LEAVE
76B2AE63    C2 0400         RETN 4



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
视频输出函数CALL winmm.DriverCallback
停止调用的话，视频不发生变化了，且不会变成黑屏
1.界面按暂停，该函数照常走 
2.错误情况下 call edi分2种情况：诊断学01.00401A48、诊断学01.00401930
76B15499 >  8BFF            MOV EDI,EDI
76B1549B    55              PUSH EBP
76B1549C    8BEC            MOV EBP,ESP
76B1549E    817D 14 C303000>CMP DWORD PTR SS:[EBP+14],3C3
76B154A5    53              PUSH EBX
76B154A6    8B5D 1C         MOV EBX,DWORD PTR SS:[EBP+1C]
76B154A9    56              PUSH ESI
76B154AA    8B75 10         MOV ESI,DWORD PTR SS:[EBP+10]
76B154AD    0F84 83710000   JE winmm.76B1C636
76B154B3    57              PUSH EDI
76B154B4    8B7D 08         MOV EDI,DWORD PTR SS:[EBP+8]
76B154B7    85FF            TEST EDI,EDI
76B154B9    0F84 A7710000   JE winmm.76B1C666
76B154BF    8B45 0C         MOV EAX,DWORD PTR SS:[EBP+C]
76B154C2    83E0 07         AND EAX,7
76B154C5    48              DEC EAX
76B154C6    74 25           JE SHORT winmm.76B154ED
76B154C8    48              DEC EAX
76B154C9    0F84 AE710000   JE winmm.76B1C67D
76B154CF    48              DEC EAX
76B154D0    0F85 97710000   JNZ winmm.76B1C66D
76B154D6    FF75 20         PUSH DWORD PTR SS:[EBP+20]
76B154D9    53              PUSH EBX
76B154DA    FF75 18         PUSH DWORD PTR SS:[EBP+18]
76B154DD    FF75 14         PUSH DWORD PTR SS:[EBP+14]
76B154E0    56              PUSH ESI
76B154E1    FFD7            CALL EDI				// F8走的话，走到这会卡住
76B154E3    33C0            XOR EAX,EAX
76B154E5    40              INC EAX
76B154E6    5F              POP EDI
76B154E7    5E              POP ESI
76B154E8    5B              POP EBX
76B154E9    5D              POP EBP
76B154EA    C2 1C00         RETN 1C

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
75103AEE   .  FFD7          CALL EDI                                 ;  诊断学01.00401A48

00401A48  /.  55            PUSH EBP
00401A49  |.  A1 30035800   MOV EAX,DWORD PTR DS:[_PlayForm]
00401A4E  |.  8BEC          MOV EBP,ESP
00401A50  |.  53            PUSH EBX
00401A51  |.  83B8 CC210000>CMP DWORD PTR DS:[EAX+21CC],0
00401A58  |.  7F 56         JG SHORT 诊断学01.00401AB0					// 往下走，不跳
00401A5A  |.  8B1D 30035800 MOV EBX,DWORD PTR DS:[_PlayForm]
00401A60  |.  8B83 08030000 MOV EAX,DWORD PTR DS:[EBX+308]
00401A66  |.  8078 2C 00    CMP BYTE PTR DS:[EAX+2C],0
00401A6A  |.  75 39         JNZ SHORT 诊断学01.00401AA5
00401A6C  |.  83BB D0210000>CMP DWORD PTR DS:[EBX+21D0],0
00401A73  |.  75 30         JNZ SHORT 诊断学01.00401AA5					// 错误情况下，总是跳
00401A75  |.  C783 D4210000>MOV DWORD PTR DS:[EBX+21D4],1
00401A7F  |.  6A 00         PUSH 0
00401A81  |.  6A 00         PUSH 0
00401A83  |.  68 11040000   PUSH 411
00401A88  |.  8BC3          MOV EAX,EBX
00401A8A  |.  E8 39471100   CALL 诊断学01.005161C8
00401A8F  |.  50            PUSH EAX                                 ; |hWnd
00401A90  |.  E8 3BC91500   CALL <JMP.&USER32.SendMessageA>          ; \SendMessageA
00401A95  |.  8B15 30035800 MOV EDX,DWORD PTR DS:[_PlayForm]
00401A9B  |.  33C9          XOR ECX,ECX
00401A9D  |.  898A D4210000 MOV DWORD PTR DS:[EDX+21D4],ECX
00401AA3  |.  EB 0B         JMP SHORT 诊断学01.00401AB0
00401AA5  |>  A1 30035800   MOV EAX,DWORD PTR DS:[_PlayForm]
00401AAA  |.  FF80 D8220000 INC DWORD PTR DS:[EAX+22D8]
00401AB0  |>  5B            POP EBX
00401AB1  |.  5D            POP EBP
00401AB2  \.  C2 1400       RETN 14

///////////////////////////////////////////////////////////////////////////////////////////////////
所有关键21D0处：
0040195A  |.  83BE D0210000>CMP DWORD PTR DS:[ESI+21D0],0
00401967  |.  83BE D0210000>CMP DWORD PTR DS:[ESI+21D0],0
0040198D  |.  FF82 D0210000 INC DWORD PTR DS:[EDX+21D0]
0040199A  |.  83B8 D0210000>CMP DWORD PTR DS:[EAX+21D0],0
00401A22  |.  83B8 D0210000>CMP DWORD PTR DS:[EAX+21D0],0
00401A34  |.  FF80 D0210000 INC DWORD PTR DS:[EAX+21D0]
00401A6C  |.  83BB D0210000>CMP DWORD PTR DS:[EBX+21D0],0
0041C3FF   .  83BA D0210000>CMP DWORD PTR DS:[EDX+21D0],0
004377E6   .  83BA D0210000>CMP DWORD PTR DS:[EDX+21D0],0
0045DB00  |>  83BE D0210000> CMP DWORD PTR DS:[ESI+21D0],0
0045DCC7  |.  83BB D0210000>CMP DWORD PTR DS:[EBX+21D0],-0A
00481D3E   .  83B9 D0210000>CMP DWORD PTR DS:[ECX+21D0],-0A
00481D5E   .  C782 D0210000>MOV DWORD PTR DS:[EDX+21D0],-0A
004AB8EC   .  83BA D0210000>CMP DWORD PTR DS:[EDX+21D0],-0A

00401A22  |.  83B8 D0210000>CMP DWORD PTR DS:[EAX+21D0],0
00401A29  |.  7E 17         JLE SHORT 诊断学01.00401A42
00401A2B  |.  80B8 1E220000>CMP BYTE PTR DS:[EAX+221E],1
00401A32  |.  75 0E         JNZ SHORT 诊断学01.00401A42
00401A34  |.  FF80 D0210000 INC DWORD PTR DS:[EAX+21D0]




DS:[017A4A60]=00000000
DS:[005B4A98]=00000000
00439250  /$  A1 30035800   MOV EAX,DWORD PTR DS:[_PlayForm]

//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
00439250  /$  A1 30035800   MOV EAX,DWORD PTR DS:[_PlayForm]
00439255  |.  E8 56000000   CALL 诊断学01.004392B0
0043925A  \.  C3            RETN

//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
00439293  |.  F7F3          DIV EBX
00439295  |.  C1E1 02       SHL ECX,2
00439298  |.  C1E2 02       SHL EDX,2
0043929B  |.  8D0C89        LEA ECX,DWORD PTR DS:[ECX+ECX*4]
0043929E  |.  8D0C89        LEA ECX,DWORD PTR DS:[ECX+ECX*4]
004392A1  |.  03CA          ADD ECX,EDX
004392A3  |.  8BC1          MOV EAX,ECX
004392A5  |.  50            PUSH EAX
004392A6  |.  E8 49940A00   CALL 诊断学01.004E26F4
004392AB  |.  59            POP ECX
004392AC  |.  5F            POP EDI
004392AD  |.  5E            POP ESI
004392AE  |.  5B            POP EBX

//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
004C0FD8   .  8B0A          MOV ECX,DWORD PTR DS:[EDX]
004C0FDA   .  81F9 BD030000 CMP ECX,3BD                              ;  Switch (cases 3BB..411)
004C0FE0   .  7F 0F         JG SHORT 诊断学01.004C0FF1
004C0FE2   .  74 2C         JE SHORT 诊断学01.004C1010
004C0FE4   .  81E9 BB030000 SUB ECX,3BB
004C0FEA   .  74 1E         JE SHORT 诊断学01.004C100A
004C0FEC   .  49            DEC ECX
004C0FED   .  74 27         JE SHORT 诊断学01.004C1016
004C0FEF   .  EB 2B         JMP SHORT 诊断学01.004C101C
004C0FF1   >  81E9 10040000 SUB ECX,410
004C0FF7   .  74 05         JE SHORT 诊断学01.004C0FFE
004C0FF9   .  49            DEC ECX
004C0FFA   .  74 08         JE SHORT 诊断学01.004C1004
004C0FFC   .  EB 1E         JMP SHORT 诊断学01.004C101C
004C0FFE   >  E8 5982F7FF   CALL 诊断学01.0043925C                      ;  Case 410 of switch 004C0FDA
004C1003   .  C3            RETN
004C1004   >  E8 6366F7FF   CALL 诊断学01.0043766C                      ;  Case 411 of switch 004C0FDA
004C1009   $  C3            RETN
004C100A   >  E8 AD88F6FF   CALL 诊断学01.004298BC                      ;  Case 3BB of switch 004C0FDA
004C100F   .  C3            RETN
004C1010   >  E8 AB88F6FF   CALL 诊断学01.004298C0                      ;  Case 3BD of switch 004C0FDA
004C1015   .  C3            RETN
004C1016   >  E8 C988F6FF   CALL 诊断学01.004298E4                      ;  Case 3BC of switch 004C0FDA
004C101B   .  C3            RETN
004C101C   >  E8 BB670700   CALL 诊断学01.005377DC                      ;  Default case of switch 004C0FDA
004C1021   .  C3            RETN

//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//调用堆栈//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////
0043877A  |.  83C4 10       ADD ESP,10
0043877D  |.  8D4B 10       LEA ECX,DWORD PTR DS:[EBX+10]
00438780  |.  8D93 DC010000 LEA EDX,DWORD PTR DS:[EBX+1DC]
00438786  |.  51            PUSH ECX
00438787  |.  8B43 48       MOV EAX,DWORD PTR DS:[EBX+48]
0043878A  |.  50            PUSH EAX
0043878B  |.  52            PUSH EDX
0043878C  |.  8B4B 04       MOV ECX,DWORD PTR DS:[EBX+4]
0043878F  |.  8D83 CC010000 LEA EAX,DWORD PTR DS:[EBX+1CC]
00438795  |.  51            PUSH ECX
00438796  |.  50            PUSH EAX
00438797  |.  8B53 08       MOV EDX,DWORD PTR DS:[EBX+8]
0043879A  |.  52            PUSH EDX
0043879B  |.  8B0A          MOV ECX,DWORD PTR DS:[EDX]
0043879D  |.  FF91 84000000 CALL DWORD PTR DS:[ECX+84]               ;  ddraw.736DD318		// 走完还是1
004387A3  |.  FF83 B8020000 INC DWORD PTR DS:[EBX+2B8]
004387A9  |>  5F            POP EDI
004387AA  |.  5E            POP ESI





00408AB0  |.  C787 D0210000>MOV DWORD PTR DS:[EDI+21D0],-1

00408D50  |.  33D2          XOR EDX,EDX
00408D52  |.  89B0 D4220000 MOV DWORD PTR DS:[EAX+22D4],ESI
00408D58  |.  8990 D0210000 MOV DWORD PTR DS:[EAX+21D0],EDX

00413378   .  33C0          XOR EAX,EAX
0041337A   .  89A5 88F5FFFF MOV DWORD PTR SS:[EBP-A78],ESP
00413380   .  8981 D0210000 MOV DWORD PTR DS:[ECX+21D0],EAX

// 正确情况下，每次都调用
0041C633   .  FF35 B4345600 PUSH DWORD PTR DS:[5634B4]               ;  诊断学01.0041C3F9
0041C41C   .  C780 D0210000>MOV DWORD PTR DS:[EAX+21D0],1

0041C432   .  83BA D0210000>CMP DWORD PTR DS:[EDX+21D0],-1

004436E2   .  33D2          XOR EDX,EDX
004436E4   .  8990 D0210000 MOV DWORD PTR DS:[EAX+21D0],EDX

0045DB09  |.  C786 D0210000>MOV DWORD PTR DS:[ESI+21D0],-1

0045DC9F  |>  33D2          XOR EDX,EDX
0045DCA1  |.  C605 90BF5600>MOV BYTE PTR DS:[56BF90],0
0045DCA8  |.  8996 D0210000 MOV DWORD PTR DS:[ESI+21D0],EDX

0045DD2B  |>  83BB D0210000> CMP DWORD PTR DS:[EBX+21D0],0
0045DD32  |.^ 75 EA         \JNZ SHORT 诊断学01.0045DD1E
0045DD34  |.  C783 D0210000>MOV DWORD PTR DS:[EBX+21D0],-1

0045DD4E  |.  33D2          XOR EDX,EDX
0045DD50  |.  8993 D0210000 MOV DWORD PTR DS:[EBX+21D0],EDX

004A6E8A   .  33C0          XOR EAX,EAX
004A6E8C   .  8981 D0210000 MOV DWORD PTR DS:[ECX+21D0],EAX

004A9796  |.  33C9          XOR ECX,ECX
004A9798  |.  BA B4E45600   MOV EDX,诊断学01.0056E4B4
004A979D  |.  898B D0210000 MOV DWORD PTR DS:[EBX+21D0],ECX

004B5788   .  33C0          XOR EAX,EAX
004B578A   .  C785 90F5FFFF>MOV DWORD PTR SS:[EBP-A70],33DEB
004B5794   .  8981 D0210000 MOV DWORD PTR DS:[ECX+21D0],EAX

0040195A  |.  83BE D0210000>CMP DWORD PTR DS:[ESI+21D0],0
00401961  |.  0F85 DB000000 JNZ 诊断学01.00401A42
00401967  |.  83BE D0210000>CMP DWORD PTR DS:[ESI+21D0],0
0040198D  |.  FF82 D0210000 INC DWORD PTR DS:[EDX+21D0]

00408AAA  |.  8B3D 30035800 MOV EDI,DWORD PTR DS:[_PlayForm]
00408AB0  |.  C787 D0210000>MOV DWORD PTR DS:[EDI+21D0],-1

00408D50  |.  33D2          XOR EDX,EDX
00408D52  |.  89B0 D4220000 MOV DWORD PTR DS:[EAX+22D4],ESI
00408D58  |.  8990 D0210000 MOV DWORD PTR DS:[EAX+21D0],EDX

////////////////////////////////////////////////////////////////////////////////////////////////////////
内存校验
1012FC2C    8A19            MOV BL,BYTE PTR DS:[ECX]
1012FC2E   /EB 18           JMP SHORT ai32fpla.1012FC48

1012FC76    FF7424 08       PUSH DWORD PTR SS:[ESP+8]
1012FC7A    8D6424 02       LEA ESP,DWORD PTR SS:[ESP+2]
1012FC7E    09D8            OR EAX,EBX				// EBX中存储读取的值
1012FC80    33C6            XOR EAX,ESI
1012FC82    E8 1E010000     CALL ai32fpla.1012FDA5


1012FD77    E8 70FFFFFF     CALL ai32fpla.1012FCEC		// 内部挂掉

1012FC82    E8 1E010000     CALL ai32fpla.1012FDA5

0012C7DC   10153F5A  RETURN to ai32fpla.10153F5A from ai32fpla.10124FCE
10153F3C    E8 1C000000     CALL ai32fpla.10153F5D		// 里面挂掉

10154564    8D6424 04       LEA ESP,DWORD PTR SS:[ESP+4]
10154568    84C0            TEST AL,AL
1015456A    E8 DAFFFFFF     CALL ai32fpla.10154549


0012C958   10126B19  RETURN to ai32fpla.10126B19 from ai32fpla.1012335D
10126B14    E8 44C8FFFF     CALL ai32fpla.1012335D

1015451A    E8 9E0CFDFF     CALL ai32fpla.101251BD
0012C964   1015451F  RETURN to ai32fpla.1015451F from ai32fpla.101251BD



////////////////////////////////////////////////
EAX CF6648DC
ECX 0055E600 诊断学01.0055E600
EDX 00000000
EBX 033D0020 ASCII "MZP"
ESP 0012C780
EBP 0012CAB4
ESI 00000006
EDI 03569DF0
EIP 10153F5A ai32fpla.10153F5A
C 0  ES 0023 32bit 0(FFFFFFFF)
P 1  CS 001B 32bit 0(FFFFFFFF)
A 0  SS 0023 32bit 0(FFFFFFFF)
Z 1  DS 0023 32bit 0(FFFFFFFF)
S 0  FS 003B 32bit 7FFDF000(FFF)
T 0  GS 0000 NULL
D 0
O 0  LastErr ERROR_SUCCESS (00000000)
EFL 00000246 (NO,NB,E,BE,NS,PE,GE,LE)
ST0 empty -??? FFFF 00000237 7669A4A1
ST1 empty -??? FFFF 00000000 6578652E
ST2 empty -??? FFFF 00000000 00000000
ST3 empty -??? FFFF 00000000 0000000C
ST4 empty -UNORM EE50 00000000 E778D978
ST5 empty 0.0292825768667642765
ST6 empty 2744275.2855051245650
ST7 empty 21487800.285505124560
               3 2 1 0      E S P U O Z D I
FST 0020  Cond 0 0 0 0  Err 0 0 1 0 0 0 0 0  (GT)
FCW 1372  Prec NEAR,64  Mask    1 1 0 0 1 0
/////////////////////////////////////////////////////////////////////
0012C7DC   10153F5A  RETURN to ai32fpla.10153F5A from ai32fpla.10124FCE

10153F50    3E:8D6424 04    LEA ESP,DWORD PTR DS:[ESP+4]
10153F55    E8 7410FDFF     CALL ai32fpla.10124FCE
10153F5A    53              PUSH EBX

Log data, item 1
 Address=10153F5A
 Message=COND: 64970D52

EAX 64970D52
ECX 0055E600 诊断学01.0055E600
EDX 00000000
EBX 032D0020 ASCII "MZP"
ESP 0012C978
EBP 0012CCAC
ESI 00000006
EDI 03469DF0
EIP 10153F5A ai32fpla.10153F5A
C 0  ES 0023 32bit 0(FFFFFFFF)
P 1  CS 001B 32bit 0(FFFFFFFF)
A 0  SS 0023 32bit 0(FFFFFFFF)
Z 1  DS 0023 32bit 0(FFFFFFFF)
S 0  FS 003B 32bit 7FFDF000(FFF)
T 0  GS 0000 NULL
D 0
O 0  LastErr ERROR_SUCCESS (00000000)
EFL 00000246 (NO,NB,E,BE,NS,PE,GE,LE)
ST0 empty -??? FFFF 00000237 7669A4A1
ST1 empty -??? FFFF 00000000 6578652E
ST2 empty -??? FFFF 00000000 00000000
ST3 empty -??? FFFF 00000000 0000000C
ST4 empty 11345.481353325642430
ST5 empty 0.0292825768667642765
ST6 empty 2744275.2855051245650
ST7 empty 21487800.285505124560
               3 2 1 0      E S P U O Z D I
FST 0020  Cond 0 0 0 0  Err 0 0 1 0 0 0 0 0  (GT)
FCW 1372  Prec NEAR,64  Mask    1 1 0 0 1 0

////////////////////////////////////////////////////////////////////////
0012C9D0   10126B19  RETURN to ai32fpla.10126B19 from ai32fpla.1012335D

10126B0F  ^\E9 E5FEFFFF     JMP ai32fpla.101269F9
10126B14    E8 44C8FFFF     CALL ai32fpla.1012335D
10126B19    41              INC ECX                                  ; 诊断学01.0055DB04

EAX 6EA8EA07
ECX 0055DB04 诊断学01.0055DB04
EDX 00000000
EBX 01B05038
ESP 02DBF5C4
EBP 00C42870
ESI 02DBFCE8
EDI 00C44B10 ASCII "96A8B0D37181B39D7E34991E442C2D9DC9FA1A0A076928A5393D232E7AD56342B2D606BF84D005FFDA05BA0CC5180552725FFE554EB9242E11B3699427017BB9"
EIP 10126B19 ai32fpla.10126B19
C 0  ES 0023 32bit 0(FFFFFFFF)
P 1  CS 001B 32bit 0(FFFFFFFF)
A 0  SS 0023 32bit 0(FFFFFFFF)
Z 1  DS 0023 32bit 0(FFFFFFFF)
S 0  FS 003B 32bit 7FF9E000(FFF)
T 0  GS 0000 NULL
D 0
O 0  LastErr ERROR_SUCCESS (00000000)
EFL 00000246 (NO,NB,E,BE,NS,PE,GE,LE)
ST0 empty -UNORM D010 7FFDF000 7FFD5000
ST1 empty -UNORM B7E0 7C930098 00000000
ST2 empty +UNORM 003D 00150778 7C930021
ST3 empty 0.0656660846324054730e-4933
ST4 empty 0.0000003757640450790e-4933
ST5 empty +UNORM 0041 00010003 00000003
ST6 empty 22050.000000000000000
ST7 empty 0.0
               3 2 1 0      E S P U O Z D I
FST 0000  Cond 0 0 0 0  Err 0 0 0 0 0 0 0 0  (GT)
FCW 1372  Prec NEAR,64  Mask    1 1 0 0 1 0
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EAX 6EA8EA07
ECX 0055DB04 诊断学01.0055DB04
EDX 00000000
EBX 033D0020
ESP 0012CA5C
EBP 0012CDAC
ESI 00000006
EDI 03569DF0
EIP 10126B19 ai32fpla.10126B19
C 0  ES 0023 32bit 0(FFFFFFFF)
P 1  CS 001B 32bit 0(FFFFFFFF)
A 0  SS 0023 32bit 0(FFFFFFFF)
Z 1  DS 0023 32bit 0(FFFFFFFF)
S 0  FS 003B 32bit 7FFDF000(FFF)
T 0  GS 0000 NULL
D 0
O 0  LastErr ERROR_SUCCESS (00000000)
EFL 00000246 (NO,NB,E,BE,NS,PE,GE,LE)
ST0 empty -??? FFFF 00000237 7669A4A1
ST1 empty -??? FFFF 00000000 6578652E
ST2 empty -??? FFFF 00000000 00000000
ST3 empty -??? FFFF 00000000 0000000C
ST4 empty 11345.481353325642430
ST5 empty 0.0292825768667642765
ST6 empty 2744275.2855051245650
ST7 empty 21487800.285505124560
               3 2 1 0      E S P U O Z D I
FST 0020  Cond 0 0 0 0  Err 0 0 1 0 0 0 0 0  (GT)
FCW 1372  Prec NEAR,64  Mask    1 1 0 0 1 0



